[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier Quotation",
  "enabled": 1,
  "modified": "2024-12-27 11:21:43.010193",
  "module": "Mohan Impex",
  "name": "Brand Name for SP",
  "script": "frappe.ui.form.on('Supplier Quotation Item', {\n    item_code: function (frm, cdt, cdn) {\n        const row = locals[cdt][cdn];\n\n        if (!row.item_code) {\n            // Clear the brand field if no item_code is selected\n            frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n            return;\n        }\n\n        // Fetch item details based on item_code\n        frappe.call({\n            method: 'frappe.client.get',\n            args: {\n                doctype: 'Item',\n                name: row.item_code,\n            },\n            callback: function (response) {\n                if (response.message) {\n                    const itemData = response.message;\n\n                    // Determine brand options\n                    let brandOptions = '';\n                    if (itemData.custom_select_brand && Array.isArray(itemData.custom_select_brand)) {\n                        brandOptions = itemData.custom_select_brand\n                            .map(obj => obj.brand_item)\n                            .join('\\n');\n                    } else if (itemData.brand_name) {\n                        brandOptions = itemData.brand_name;\n                    }\n\n                    // Update the brand field options or handle no brand options\n                    if (brandOptions) {\n                        // Update the options for the brand field in the grid row\n                        frm.fields_dict.items.grid.update_docfield_property('custom_select_brand', 'options', brandOptions);\n\n                        // Clear the brand value to allow re-selection\n                        frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n                    } else {\n                        frappe.msgprint({\n                            title: __('No Brand Options'),\n                            message: __('No brand options available for the selected Item Code.'),\n                            indicator: 'orange',\n                        });\n                        frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n                    }\n                } else {\n                    frappe.msgprint({\n                        title: __('Item Not Found'),\n                        message: __('Item details not found for the given Item Code.'),\n                        indicator: 'red',\n                    });\n                    frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n                }\n            },\n            error: function () {\n                frappe.msgprint({\n                    title: __('Error'),\n                    message: __('Unable to fetch Item details. Please try again later.'),\n                    indicator: 'red',\n                });\n                frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n            },\n        });\n    },\n});\n\n\n\n ",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2024-12-27 11:24:45.610129",
  "module": "Mohan Impex",
  "name": "Brand Name for PI",
  "script": "frappe.ui.form.on('Purchase Invoice Item', {\n    item_code: function (frm, cdt, cdn) {\n        const row = locals[cdt][cdn];\n\n        if (!row.item_code) {\n            // Clear the brand field if no item_code is selected\n            frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n            return;\n        }\n\n        // Fetch item details based on item_code\n        frappe.call({\n            method: 'frappe.client.get',\n            args: {\n                doctype: 'Item',\n                name: row.item_code,\n            },\n            callback: function (response) {\n                if (response.message) {\n                    const itemData = response.message;\n\n                    // Determine brand options\n                    let brandOptions = '';\n                    if (itemData.custom_select_brand && Array.isArray(itemData.custom_select_brand)) {\n                        brandOptions = itemData.custom_select_brand\n                            .map(obj => obj.brand_item)\n                            .join('\\n');\n                    } else if (itemData.brand_name) {\n                        brandOptions = itemData.brand_name;\n                    }\n\n                    // Update the brand field options or handle no brand options\n                    if (brandOptions) {\n                        // Update the options for the brand field in the grid row\n                        frm.fields_dict.items.grid.update_docfield_property('custom_select_brand', 'options', brandOptions);\n\n                        // Clear the brand value to allow re-selection\n                        frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n                    } else {\n                        frappe.msgprint({\n                            title: __('No Brand Options'),\n                            message: __('No brand options available for the selected Item Code.'),\n                            indicator: 'orange',\n                        });\n                        frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n                    }\n                } else {\n                    frappe.msgprint({\n                        title: __('Item Not Found'),\n                        message: __('Item details not found for the given Item Code.'),\n                        indicator: 'red',\n                    });\n                    frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n                }\n            },\n            error: function () {\n                frappe.msgprint({\n                    title: __('Error'),\n                    message: __('Unable to fetch Item details. Please try again later.'),\n                    indicator: 'red',\n                });\n                frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n            },\n        });\n    },\n});\n\n",
  "view": "Form"
 },
 
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Request for Quotation",
  "enabled": 1,
  "modified": "2024-12-27 11:29:30.065023",
  "module": "Mohan Impex",
  "name": "Request for Quotation Item",
  "script": "frappe.ui.form.on('Request for Quotation Item', {\n    item_code: function (frm, cdt, cdn) {\n        const row = locals[cdt][cdn];\n\n        if (!row.item_code) {\n            // Clear the brand field if no item_code is selected\n            frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n            return;\n        }\n\n        // Fetch item details based on item_code\n        frappe.call({\n            method: 'frappe.client.get',\n            args: {\n                doctype: 'Item',\n                name: row.item_code,\n            },\n            callback: function (response) {\n                if (response.message) {\n                    const itemData = response.message;\n\n                    // Determine brand options\n                    let brandOptions = '';\n                    if (itemData.custom_select_brand && Array.isArray(itemData.custom_select_brand)) {\n                        brandOptions = itemData.custom_select_brand\n                            .map(obj => obj.brand_item)\n                            .join('\\n');\n                    } else if (itemData.brand_name) {\n                        brandOptions = itemData.brand_name;\n                    }\n\n                    // Update the brand field options or handle no brand options\n                    if (brandOptions) {\n                        // Update the options for the brand field in the grid row\n                        frm.fields_dict.items.grid.update_docfield_property('custom_select_brand', 'options', brandOptions);\n\n                        // Clear the brand value to allow re-selection\n                        frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n                    } else {\n                        frappe.msgprint({\n                            title: __('No Brand Options'),\n                            message: __('No brand options available for the selected Item Code.'),\n                            indicator: 'orange',\n                        });\n                        frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n                    }\n                } else {\n                    frappe.msgprint({\n                        title: __('Item Not Found'),\n                        message: __('Item details not found for the given Item Code.'),\n                        indicator: 'red',\n                    });\n                    frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n                }\n            },\n            error: function () {\n                frappe.msgprint({\n                    title: __('Error'),\n                    message: __('Unable to fetch Item details. Please try again later.'),\n                    indicator: 'red',\n                });\n                frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n            },\n        });\n    },\n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee",
  "enabled": 1,
  "modified": "2024-12-27 18:06:25.392543",
  "module": "Mohan Impex",
  "name": "Total Number in MI",
  "script": "frappe.ui.form.on('Employee', {\n\trefresh(frm) {\n\t\t// Ensure that we set the value if the 'date_of_joining' is already set when the form lo\n\t},\n\tbefore_save(frm){\n\t    if (frm.doc.date_of_joining) {\n\t\t\tupdate_years_months_days(frm);\n\t\t}\n\t},\n\t// This will trigger whenever 'date_of_joining' field is changed\n\tdate_of_joining: function (frm) {\n\t\t// When the date_of_joining is changed, recalculate years, months, and days\n\t\tif (frm.doc.date_of_joining) {\n\t\t\tupdate_years_months_days(frm);\n\t\t}\n\t}\n});\nfunction update_years_months_days(frm) {\n\tconst joining_date = frm.doc.date_of_joining;\n\tconst current_date = frappe.datetime.nowdate();\n\t// Calculate the difference in days\n\tconst total_days_diff = frappe.datetime.get_diff(current_date, joining_date);\n\t// Calculate the number of full years\n\tconst years = Math.floor(total_days_diff / 365);\n\t// Calculate the remaining days after extracting years\n\tconst remaining_days_after_years = total_days_diff - years * 365;\n\t// Calculate the number of full months\n\tconst months = Math.floor(remaining_days_after_years / 30); // Approximate months (30 days p\n\t// Calculate the remaining days after extracting months\n\tconst remaining_days = remaining_days_after_years - months * 30; // Approximate remaining da\n\t// Format the result as \"X years Y months Z days\"\n\tlet years_and_months_days = `${years} years`;\n\tif (months > 0) {\n\t\tyears_and_months_days += ` ${months} months`;\n\t}\n\tif (remaining_days > 0) {\n\t\tyears_and_months_days += ` ${remaining_days} days`;\n\t}\n\t// Set the value in the custom field\n\tfrm.set_value('custom__total_number_of_year_in_mi', years_and_months_days);\n}\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier Quotation",
  "enabled": 1,
  "modified": "2024-12-27 12:17:13.130096",
  "module": "Mohan Impex",
  "name": "Brand Name for SQ",
  "script": "frappe.ui.form.on('Supplier Quotation Item', {\n    item_code: function (frm, cdt, cdn) {\n        const row = locals[cdt][cdn];\n\n        if (!row.item_code) {\n            // Clear the brand field if no item_code is selected\n            frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n            return;\n        }\n\n        // Fetch item details based on item_code\n        frappe.call({\n            method: 'frappe.client.get',\n            args: {\n                doctype: 'Item',\n                name: row.item_code,\n            },\n            callback: function (response) {\n                if (response.message) {\n                    const itemData = response.message;\n\n                    // Determine brand options\n                    let brandOptions = '';\n                    if (itemData.custom_select_brand && Array.isArray(itemData.custom_select_brand)) {\n                        brandOptions = itemData.custom_select_brand\n                            .map(obj => obj.brand_item)\n                            .join('\\n');\n                    } else if (itemData.brand_name) {\n                        brandOptions = itemData.brand_name;\n                    }\n\n                    // Update the brand field options or handle no brand options\n                    if (brandOptions) {\n                        // Update the options for the brand field in the grid row\n                        frm.fields_dict.items.grid.update_docfield_property('custom_select_brand', 'options', brandOptions);\n\n                        // Clear the brand value to allow re-selection\n                        frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n                    } else {\n                        frappe.msgprint({\n                            title: __('No Brand Options'),\n                            message: __('No brand options available for the selected Item Code.'),\n                            indicator: 'orange',\n                        });\n                        frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n                    }\n                } else {\n                    frappe.msgprint({\n                        title: __('Item Not Found'),\n                        message: __('Item details not found for the given Item Code.'),\n                        indicator: 'red',\n                    });\n                    frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n                }\n            },\n            error: function () {\n                frappe.msgprint({\n                    title: __('Error'),\n                    message: __('Unable to fetch Item details. Please try again later.'),\n                    indicator: 'red',\n                });\n                frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n            },\n        });\n    },\n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2024-12-27 14:51:28.230139",
  "module": "Mohan Impex",
  "name": "Brand Name for Quotation",
  "script": "frappe.ui.form.on('Quotation', {\n    item_code: function (frm, cdt, cdn) {\n        const row = locals[cdt][cdn];\n\n        if (!row.item_code) {\n            // Clear the brand field if no item_code is selected\n            frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n            return;\n        }\n\n        // Fetch item details based on item_code\n        frappe.call({\n            method: 'frappe.client.get',\n            args: {\n                doctype: 'Item',\n                name: row.item_code,\n            },\n            callback: function (response) {\n                if (response.message) {\n                    const itemData = response.message;\n\n                    // Determine brand options\n                    let brandOptions = '';\n                    if (itemData.custom_select_brand && Array.isArray(itemData.custom_select_brand)) {\n                        brandOptions = itemData.custom_select_brand\n                            .map(obj => obj.brand_item)\n                            .join('\\n');\n                    } else if (itemData.brand_name) {\n                        brandOptions = itemData.brand_name;\n                    }\n\n                    // Update the brand field options or handle no brand options\n                    if (brandOptions) {\n                        // Update the options for the brand field in the grid row\n                        frm.fields_dict.items.grid.update_docfield_property('custom_select_brand', 'options', brandOptions);\n\n                        // Clear the brand value to allow re-selection\n                        frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n                    } else {\n                        frappe.msgprint({\n                            title: __('No Brand Options'),\n                            message: __('No brand options available for the selected Item Code.'),\n                            indicator: 'orange',\n                        });\n                        frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n                    }\n                } else {\n                    frappe.msgprint({\n                        title: __('Item Not Found'),\n                        message: __('Item details not found for the given Item Code.'),\n                        indicator: 'red',\n                    });\n                    frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n                }\n            },\n            error: function () {\n                frappe.msgprint({\n                    title: __('Error'),\n                    message: __('Unable to fetch Item details. Please try again later.'),\n                    indicator: 'red',\n                });\n                frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n            },\n        });\n    },\n});\n\n\n\n ",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Blanket Order",
  "enabled": 1,
  "modified": "2024-12-27 14:23:25.670324",
  "module": "Mohan Impex",
  "name": "Brand Name for Blanket Order",
  "script": "frappe.ui.form.on('Blanket Order Item', {\n    item_code: function (frm, cdt, cdn) {\n        const row = locals[cdt][cdn];\n\n        if (!row.item_code) {\n            // Clear the brand field if no item_code is selected\n            frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n            return;\n        }\n\n        // Fetch item details based on item_code\n        frappe.call({\n            method: 'frappe.client.get',\n            args: {\n                doctype: 'Item',\n                name: row.item_code,\n            },\n            callback: function (response) {\n                if (response.message) {\n                    const itemData = response.message;\n\n                    // Determine brand options\n                    let brandOptions = '';\n                    if (itemData.custom_select_brand && Array.isArray(itemData.custom_select_brand)) {\n                        brandOptions = itemData.custom_select_brand\n                            .map(obj => obj.brand_item)\n                            .join('\\n');\n                    } else if (itemData.brand_name) {\n                        brandOptions = itemData.brand_name;\n                    }\n\n                    // Update the brand field options or handle no brand options\n                    if (brandOptions) {\n                        // Update the options for the brand field in the grid row\n                        frm.fields_dict.items.grid.update_docfield_property('custom_select_brand', 'options', brandOptions);\n\n                        // Clear the brand value to allow re-selection\n                        frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n                    } else {\n                        frappe.msgprint({\n                            title: __('No Brand Options'),\n                            message: __('No brand options available for the selected Item Code.'),\n                            indicator: 'orange',\n                        });\n                        frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n                    }\n                } else {\n                    frappe.msgprint({\n                        title: __('Item Not Found'),\n                        message: __('Item details not found for the given Item Code.'),\n                        indicator: 'red',\n                    });\n                    frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n                }\n            },\n            error: function () {\n                frappe.msgprint({\n                    title: __('Error'),\n                    message: __('Unable to fetch Item details. Please try again later.'),\n                    indicator: 'red',\n                });\n                frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n            },\n        });\n    },\n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2024-12-27 14:48:27.768241",
  "module": "Mohan Impex",
  "name": "Brand Name for Sales Invoice",
  "script": "frappe.ui.form.on('Sales Invoice Item', {\n    item_code: function (frm, cdt, cdn) {\n        const row = locals[cdt][cdn];\n\n        if (!row.item_code) {\n            // Clear the brand field if no item_code is selected\n            frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n            return;\n        }\n\n        // Fetch item details based on item_code\n        frappe.call({\n            method: 'frappe.client.get',\n            args: {\n                doctype: 'Item',\n                name: row.item_code,\n            },\n            callback: function (response) {\n                if (response.message) {\n                    const itemData = response.message;\n\n                    // Determine brand options\n                    let brandOptions = '';\n                    if (itemData.custom_select_brand && Array.isArray(itemData.custom_select_brand)) {\n                        brandOptions = itemData.custom_select_brand\n                            .map(obj => obj.brand_item)\n                            .join('\\n');\n                    } else if (itemData.brand_name) {\n                        brandOptions = itemData.brand_name;\n                    }\n\n                    // Update the brand field options or handle no brand options\n                    if (brandOptions) {\n                        // Update the options for the brand field in the grid row\n                        frm.fields_dict.items.grid.update_docfield_property('custom_select_brand', 'options', brandOptions);\n\n                        // Clear the brand value to allow re-selection\n                        frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n                    } else {\n                        frappe.msgprint({\n                            title: __('No Brand Options'),\n                            message: __('No brand options available for the selected Item Code.'),\n                            indicator: 'orange',\n                        });\n                        frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n                    }\n                } else {\n                    frappe.msgprint({\n                        title: __('Item Not Found'),\n                        message: __('Item details not found for the given Item Code.'),\n                        indicator: 'red',\n                    });\n                    frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n                }\n            },\n            error: function () {\n                frappe.msgprint({\n                    title: __('Error'),\n                    message: __('Unable to fetch Item details. Please try again later.'),\n                    indicator: 'red',\n                });\n                frappe.model.set_value(cdt, cdn, 'custom_select_brand', '');\n            },\n        });\n    },\n});\n\n",
  "view": "Form"
 }
]